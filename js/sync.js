// Generated by CoffeeScript 2.3.0
var S_IFDIR, S_IFLNK, S_IFMT, S_IFREG, errno, fs, getMode, lstatSync, os, path, readdirSync, resolve, uhoh;

({S_IFMT, S_IFREG, S_IFDIR, S_IFLNK} = require('fs').constants);

({lstatSync, readdirSync} = require('fs'));

errno = require('./errno');

path = require('path');

os = require('os');

fs = exports;

fs.list = function(name) {
  var mode;
  name = resolve(name);
  if (!(mode = getMode(name))) {
    uhoh(`Path does not exist: '${name}'`, 'NOT_REAL');
  }
  if (mode !== S_IFDIR) {
    uhoh(`Path is not a directory: '${name}'`, 'NOT_DIR');
  }
  return readdirSync(name);
};

fs.isFile = function(name) {
  return getMode(resolve(name)) === S_IFREG;
};


// Internal

uhoh = function(msg, why) {
  var err;
  err = Error(msg);
  err.code = errno[why] || 0;
  Error.captureStackTrace(err, uhoh);
  throw err;
};

resolve = function(name) {
  if (name[0] === '~') {
    return os.homedir() + name.slice(1);
  } else {
    return path.resolve(name);
  }
};

getMode = function(name) {
  var e;
  try {
    return lstatSync(name).mode & S_IFMT;
  } catch (error) {
    e = error;
    return null;
  }
};

(function() {  // Expose error codes.
  var def, des, why;
  def = Object.defineProperty;
  des = {
    value: 0
  };
  for (why in errno) {
    des.value = errno[why];
    def(fs, why, des);
  }
})();
